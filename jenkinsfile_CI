pipeline {
    agent any
    tools{
        jdk 'jdk11'
        maven 'maven3'
    }
    environment{
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('Git checkout'){
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/jaiswaladi246/Ekart.git'
            }
        }
        stage('Compile'){
            steps{
                sh "mvn clean compile"
            }
        }
        stage('Sonarqube Analysis'){
            steps{
                sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.host.url=http://127.0.0.1:9000/ -Dsonar.login=s****** -Dsonar.projectName=shopping-cart \
                -Dsonar.java.binaries=. \
                -Dsonar.projectKey=shopping-cart '''
            }
        }
        stage('OWASP SCAN'){
            steps{
                dependencyCheck additionalArguments: ' --scan ./', odcInstallation: 'DP'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('Build Application'){
            steps{
                sh "mvn clean install -DskipTests=true"
            }
        }
        stage('Build & Push Docker Image'){
            steps{
                script{
                    withDockerRegistry(credentialsId: '*******', toolName: 'docker') {
                        sh "docker build -t shopping:latest -f docker/Dockerfile ."
                        sh "docker tag shopping:latest ***3/shopping:latest"
                        sh "docker push ****/shopping:latest"

                    }
                }
            }
        }
        stage('Trigger CD Pipeline'){
            steps{
                build job: "CD_Pipeline", wait: true
            }
        }
    }
}
